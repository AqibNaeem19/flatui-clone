import React, { Component } from 'react';
import ColorBox from './ColorBox';
import NavBar from './NavBar';
import Footer from './footer';
import styles from './styles/PaletteStyles';
import { Link } from 'react-router-dom';
import { withStyles } from '@material-ui/styles';

class SingleColorPalette extends Component{
	constructor(props){
		super(props);
		this.state = { format: "hex"}
		this._shades = this.gatherShades(this.props.palette, this.props.colorId);
		this.changeFormat = this.changeFormat.bind(this);
	}

	//gather shades of a particular color generated by chroma.js
	gatherShades(palette, colorToFilterBy){
		let shades = [];
		let allColors = palette.colors;
		for(let key in allColors){
			shades = shades.concat(
				allColors[key].filter(color => color.id === colorToFilterBy)
			)
		}
		//to cut the first shade which is white
		return shades.slice(1);
	}

	//function as a props to navbar
	changeFormat(val){
		this.setState({ format: val})
	}

	render(){
		//Taking props from app.js
		const { creater,
			emoji, 
			paletteName, 
			id
		} = this.props.palette;
		const { classes } = this.props;
		let {format} = this.state;

		let colorBoxe = this._shades.map(color => (
			<ColorBox key={color.name} 
				name={color.name} 
				background={color[format]} 
				showLink={false} 
			/>
		))
          
		return (
			<React.Fragment>
               	<div className={classes.Palette}>
				   
               		<NavBar getColorFormat={this.changeFormat} 
						display={true} 
						slider={false}
               		/>

                    <div className={classes.paletteColors}>
						{colorBoxe}
						<div className={classes.goBack}>
                            <Link to={`/palette/${id}`} >
								<button>Back</button>
							</Link>
						</div>

                    </div>
               	</div>

				<Footer creater={creater} 
					emoji={emoji} 
					paletteName={paletteName} 
				/>

			</React.Fragment>
		)
	}
}

export default withStyles(styles)(SingleColorPalette);